# docs/swagger/releases-notifications.yaml
openapi: 3.0.0
info:
  title: Releases and Notifications API
  version: 1.0.0
  description: API endpoints for upcoming releases, reminders, and notifications

paths:
  /api/v1/releases/upcoming:
    get:
      tags:
        - Releases
      summary: Get upcoming movie releases
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
        - name: genre
          in: query
          schema:
            type: string
          description: Filter by specific genre
        - name: period
          in: query
          schema:
            type: string
            enum: [week, month, year]
          description: Time period for upcoming releases
      responses:
        200:
          description: Upcoming releases retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpcomingReleasesResponse'

  /api/v1/releases/reminder:
    post:
      tags:
        - Releases
      summary: Set a reminder for a movie
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - movieId
                - type
              properties:
                movieId:
                  type: string
                type:
                  type: string
                  enum: [release, trailer]
      responses:
        201:
          description: Reminder set successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReminderResponse'

  /api/v1/releases/reminder/{movieId}/{type}:
    delete:
      tags:
        - Releases
      summary: Cancel a reminder
      security:
        - BearerAuth: []
      parameters:
        - name: movieId
          in: path
          required: true
          schema:
            type: string
        - name: type
          in: path
          required: true
          schema:
            type: string
            enum: [release, trailer]
      responses:
        200:
          description: Reminder cancelled successfully

  /api/v1/releases/reminders:
    get:
      tags:
        - Releases
      summary: Get user's reminders
      security:
        - BearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
      responses:
        200:
          description: User reminders retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemindersResponse'

  /api/v1/notifications:
    get:
      tags:
        - Notifications
      summary: Get user's notifications
      security:
        - BearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
      responses:
        200:
          description: Notifications retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationsResponse'

  /api/v1/notifications/unread-count:
    get:
      tags:
        - Notifications
      summary: Get count of unread notifications
      security:
        - BearerAuth: []
      responses:
        200:
          description: Unread count retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      count:
                        type: integer

  /api/v1/notifications/{notificationId}/read:
    patch:
      tags:
        - Notifications
      summary: Mark a notification as read
      security:
        - BearerAuth: []
      parameters:
        - name: notificationId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Notification marked as read
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'

  /api/v1/notifications/mark-all-read:
    patch:
      tags:
        - Notifications
      summary: Mark all notifications as read
      security:
        - BearerAuth: []
      responses:
        200:
          description: All notifications marked as read

  /api/v1/notifications/{notificationId}:
    delete:
      tags:
        - Notifications
      summary: Delete a notification
      security:
        - BearerAuth: []
      parameters:
        - name: notificationId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Notification deleted successfully

components:
  schemas:
    Reminder:
      type: object
      properties:
        _id:
          type: string
        userId:
          type: string
        movieId:
          $ref: '#/components/schemas/Movie'
        type:
          type: string
          enum: [release, trailer]
        status:
          type: string
          enum: [pending, sent, cancelled]
        reminderDate:
          type: string
          format: date-time
        notificationsSent:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                enum: [email, dashboard]
              sentAt:
                type: string
                format: date-time

    Notification:
      type: object
      properties:
        _id:
          type: string
        userId:
          type: string
        type:
          type: string
          enum: [release, trailer, genre_update]
        title:
          type: string
        message:
          type: string
        link:
          type: string
        movieId:
          $ref: '#/components/schemas/Movie'
        status:
          type: string
          enum: [unread, read]
        isRead:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    UpcomingReleasesResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/Movie'
            total:
              type: integer
            page:
              type: integer
            totalPages:
              type: integer

    ReminderResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/Reminder'

    RemindersResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/Reminder'
            total:
              type: integer
            page:
              type: integer
            totalPages:
              type: integer

    NotificationsResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/Notification'
            total:
              type: integer
            page:
              type: integer
            totalPages:
              type: integer

    NotificationResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/Notification'

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT